//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.03.15 at 04:29:34 PM CET 
//


package cablelabs.md.xsd.core._3;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;


/**
 * An abstract base type that defines a reference to an asset.
 * 
 * <p>Java class for AssetRefBaseType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AssetRefBaseType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Ext" type="{urn:cablelabs:md:xsd:core:3.0}ExtType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="uriId" use="required" type="{urn:cablelabs:md:xsd:core:3.0}URIIdType" />
 *       &lt;anyAttribute processContents='lax'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AssetRefBaseType", propOrder = {
    "ext"
})
@XmlSeeAlso({
    AssetRefType.class
})
public abstract class AssetRefBaseType {

    @XmlElement(name = "Ext")
    protected ExtType ext;
    @XmlAttribute(name = "uriId", required = true)
    protected String uriId;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the ext property.
     * 
     * @return
     *     possible object is
     *     {@link ExtType }
     *     
     */
    public ExtType getExt() {
        return ext;
    }

    /**
     * Sets the value of the ext property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExtType }
     *     
     */
    public void setExt(ExtType value) {
        this.ext = value;
    }

    /**
     * Gets the value of the uriId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUriId() {
        return uriId;
    }

    /**
     * Sets the value of the uriId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUriId(String value) {
        this.uriId = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
